variables:
  GIT_STRATEGY: fetch
  DOCKER_FILE: ${CI_PROJECT_DIR}/gitlab-utils/Dockerfile
  DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_DEV: pycity_scheduling_ci


stages:
  - build
  - test
  - deploy
  - release


prepare:
  variables:
    GIT_SUBMODULE_STRATEGY: none
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile ${DOCKER_FILE} --target base --destination ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_DEV}-base-${DOCKER_TAG} --cache=true --cache-ttl=72h --snapshotMode=redo --use-new-run


lint:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_DEV}-base-${DOCKER_TAG}
  script:
    - cd $CI_PROJECT_DIR/src
    - python3.6 -m pip install --no-cache-dir .
    - pylint --rcfile=$CI_PROJECT_DIR/gitlab-utils/.pylintrc pycity_scheduling > $CI_PROJECT_DIR/gitlab-utils/pylint_report.txt || true
    - tail -n 2 $CI_PROJECT_DIR/gitlab-utils/pylint_report.txt
    - python3.6 -m pip uninstall -y pycity_scheduling
    - cd $CI_PROJECT_DIR
  artifacts:
    name: "pylint-report"
    paths:
      - $CI_PROJECT_DIR/gitlab-utils/pylint_report.txt
    expire_in: 4 weeks
    when: always


unittest:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_DEV}-base-${DOCKER_TAG}
  script:
    - cd $CI_PROJECT_DIR/src
    - python3.6 -m pip install --no-cache-dir .
    - cd $CI_PROJECT_DIR/src/testing/unit_tests
    - python3.6 -m unittest discover -v
    - python3.6 -m pip uninstall -y pycity_scheduling
    - cd $CI_PROJECT_DIR


doc:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  image: ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_DEV}-base-${DOCKER_TAG}
  script:
    - cd $CI_PROJECT_DIR/src
    - python3.6 -m pip install --no-cache-dir .
    - cd $CI_PROJECT_DIR/gitlab-utils/sphinx_doc
    - bash ./docu.sh
    - python3.6 -m pip uninstall -y pycity_scheduling
    - cd $CI_PROJECT_DIR
  artifacts:
    name: "sphinx-documentation"
    paths:
      - $CI_PROJECT_DIR/gitlab-utils/sphinx_doc/_build/html
    expire_in: 365 days
    when: always


pypi:
  stage: release
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "web"'
      when: delayed
      start_in: '2 minutes'
  image: ${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_DEV}-base-${DOCKER_TAG}
  script:
    - cd $CI_PROJECT_DIR/src
    - cp $CI_PROJECT_DIR/LICENSE.txt $CI_PROJECT_DIR/src/LICENSE.txt
    - cp $CI_PROJECT_DIR/README.md $CI_PROJECT_DIR/src/README.md
    - python3.6 setup.py sdist bdist_wheel
    - echo $GITLAB_USER_ID
